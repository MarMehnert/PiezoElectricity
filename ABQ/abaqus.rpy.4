# -*- coding: mbcs -*-
#
# Abaqus/CAE Release 6.13-3 replay file
# Internal Version: 2013_10_09-13.29.32 126623
# Run by iwtm80 on Tue Feb  6 13:32:14 2018
#

# from driverUtils import executeOnCaeGraphicsStartup
# executeOnCaeGraphicsStartup()
#: Executing "onCaeGraphicsStartup()" in the site directory ...
from abaqus import *
from abaqusConstants import *
session.Viewport(name='Viewport: 1', origin=(0.0, 0.0), width=276.013336181641, 
    height=262.959991455078)
session.viewports['Viewport: 1'].makeCurrent()
session.viewports['Viewport: 1'].maximize()
from caeModules import *
from driverUtils import executeOnCaeStartup
executeOnCaeStartup()
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
openMdb(
    pathName='/calculate/iwtm80/DEAL_II/piezo_electricity/ABQ/Matrix_inclusion_3D.cae')
#: The model database "/calculate/iwtm80/DEAL_II/piezo_electricity/ABQ/Matrix_inclusion_3D.cae" has been opened.
session.viewports['Viewport: 1'].setValues(displayedObject=None)
p = mdb.models['Model-1'].parts['Inclusion']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
p1 = mdb.models['Model-1'].parts['Matrix_Inclusion']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
session.viewports['Viewport: 1'].view.setValues(nearPlane=31.8095, 
    farPlane=56.3179, width=23.9414, height=13.9502, cameraPosition=(30.5495, 
    29.8389, 33.4321), cameraUpVector=(0.0185672, 0.343172, -0.939089), 
    cameraTarget=(5.10938, 4.39872, 7.99189))
session.viewports['Viewport: 1'].view.setValues(nearPlane=32.6471, 
    farPlane=55.7848, width=24.5718, height=14.3176, cameraPosition=(39.751, 
    18.5651, 31.2486), cameraUpVector=(0.188778, 0.104561, -0.976437), 
    cameraTarget=(5.10938, 4.39872, 7.99189))
session.viewports['Viewport: 1'].view.setValues(nearPlane=35.5105, 
    farPlane=53.2286, width=26.727, height=15.5734, cameraPosition=(48.1744, 
    -2.9181, 14.0192), cameraUpVector=(-0.227636, -0.135059, -0.964335), 
    cameraTarget=(5.13839, 4.32472, 7.93254))
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
session.viewports['Viewport: 1'].assemblyDisplay.setValues(
    optimizationTasks=OFF, geometricRestrictions=OFF, stopConditions=OFF)
a = mdb.models['Model-1'].rootAssembly
a.resumeFeatures(('Inclusion-2', 'Matrix-2', ))
session.viewports['Viewport: 1'].view.fitView()
session.viewports['Viewport: 1'].view.setValues(width=27.1023, height=15.792, 
    viewOffsetX=-0.0356973, viewOffsetY=0.0269102)
session.viewports['Viewport: 1'].view.setValues(nearPlane=39.935, 
    farPlane=71.3324, width=23.6157, height=13.7605, cameraPosition=(-12.2657, 
    -37.4291, 40.8181), cameraUpVector=(0.313933, 0.512337, 0.799348), 
    cameraTarget=(7.48457, 2.49548, 7.47201), viewOffsetX=-0.0311051, 
    viewOffsetY=0.0234484)
session.viewports['Viewport: 1'].view.setValues(nearPlane=42.6741, 
    farPlane=68.572, width=25.2355, height=14.7043, cameraPosition=(-10.7116, 
    -49.2667, -1.58135), cameraUpVector=(0.084634, -0.200287, 0.976075), 
    cameraTarget=(7.49446, 2.52768, 7.46801), viewOffsetX=-0.0332385, 
    viewOffsetY=0.0250567)
session.viewports['Viewport: 1'].view.setValues(nearPlane=44.0498, 
    farPlane=67.1417, width=26.0491, height=15.1783, cameraPosition=(19.7253, 
    -51.6752, 10.0458), cameraUpVector=(-0.00465325, 0.046417, 0.998911), 
    cameraTarget=(7.4886, 2.54321, 7.46935), viewOffsetX=-0.03431, 
    viewOffsetY=0.0258645)
session.viewports['Viewport: 1'].view.setValues(nearPlane=43.497, 
    farPlane=67.7037, width=25.7222, height=14.9879, cameraPosition=(14.6601, 
    -51.7803, 17.184), cameraUpVector=(-0.077478, 0.165667, 0.983134), 
    cameraTarget=(7.49574, 2.53594, 7.46655), viewOffsetX=-0.0338794, 
    viewOffsetY=0.0255399)
openMdb(
    pathName='/calculate/iwtm80/DEAL_II/piezo_electricity/ABQ/Matrix_inclusion.cae')
#: The model database "/calculate/iwtm80/DEAL_II/piezo_electricity/ABQ/Matrix_inclusion.cae" has been opened.
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
openMdb(
    pathName='/calculate/iwtm80/DEAL_II/piezo_electricity/ABQ/Matrix_inclusion_3D.cae')
#: The model database "/calculate/iwtm80/DEAL_II/piezo_electricity/ABQ/Matrix_inclusion_3D.cae" has been opened.
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
p1 = mdb.models['Model-1'].parts['Matrix']
session.viewports['Viewport: 1'].setValues(displayedObject=p1)
p = mdb.models['Model-1'].parts['Matrix']
p.suppressFeatures(('Cut revolve-2', 'Partition cell-1', 'Partition cell-2', 
    'Partition cell-3', 'Partition cell-4', 'Partition cell-5', ))
#: Warning: Failed to attach mesh to part geometry.
#: Warning: Cannot continue yet--complete the step or cancel the procedure.
session.viewports['Viewport: 1'].view.setValues(width=36.8554, height=21.475, 
    viewOffsetX=0.233763, viewOffsetY=-0.0317792)
p = mdb.models['Model-1'].parts['Matrix']
c = p.cells
pickedCells = c.getSequenceFromMask(mask=('[#1 ]', ), )
e, v, d = p.edges, p.vertices, p.datums
p.PartitionCellByPlanePointNormal(normal=e[4], cells=pickedCells, 
    point=p.InterestingPoint(edge=e[4], rule=MIDDLE))
session.viewports['Viewport: 1'].partDisplay.setValues(mesh=ON)
session.viewports['Viewport: 1'].partDisplay.meshOptions.setValues(
    meshTechnique=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
p = mdb.models['Model-1'].parts['Matrix']
p.generateMesh()
p = mdb.models['Model-1'].parts['Matrix']
p.deleteMesh()
p = mdb.models['Model-1'].parts['Matrix']
p.seedPart(size=1.0, deviationFactor=0.1, minSizeFactor=0.1)
p = mdb.models['Model-1'].parts['Matrix']
p.generateMesh()
session.viewports['Viewport: 1'].view.setValues(nearPlane=45.339, 
    farPlane=70.876, width=38.6959, height=22.6052, cameraPosition=(14.2216, 
    16.9095, 64.4492), cameraUpVector=(-0.403581, 0.804219, -0.436296), 
    cameraTarget=(7.69373, 6.87251, 7.60163), viewOffsetX=0.245436, 
    viewOffsetY=-0.0333662)
session.viewports['Viewport: 1'].view.setValues(nearPlane=45.7597, 
    farPlane=70.759, width=39.055, height=22.815, cameraPosition=(8.4901, 
    -4.11048, 64.5853), cameraUpVector=(-0.239413, 0.959126, -0.150858), 
    cameraTarget=(7.68152, 6.9071, 7.55056), viewOffsetX=0.247713, 
    viewOffsetY=-0.0336758)
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
a = mdb.models['Model-1'].rootAssembly
a.resumeFeatures(('Inclusion-2', 'Matrix-2', ))
session.viewports['Viewport: 1'].view.setValues(nearPlane=18.5019, 
    farPlane=36.6573, width=0.882147, height=0.514012, viewOffsetX=-0.251063, 
    viewOffsetY=0.00676632)
session.viewports['Viewport: 1'].view.fitView()
session.viewports['Viewport: 1'].view.setValues(nearPlane=41.4091, 
    farPlane=69.8744, width=23.9977, height=13.983, cameraPosition=(10.0804, 
    -26.8916, 54.675), cameraUpVector=(0.0279597, 0.849101, 0.52749))
session.viewports['Viewport: 1'].view.setValues(nearPlane=40.2524, 
    farPlane=71.0311, width=23.3274, height=13.5924, cameraPosition=(22.617, 
    -33.0459, 47.5496), cameraUpVector=(-0.11461, 0.721107, 0.683278), 
    cameraTarget=(7.5, 2.5, 7.5))
session.viewports['Viewport: 1'].view.setValues(nearPlane=43.358, 
    farPlane=67.9255, width=25.1272, height=14.6412, cameraPosition=(2.54299, 
    -50.8949, 22.3465), cameraUpVector=(-0.334081, 0.281158, 0.899633), 
    cameraTarget=(7.5, 2.5, 7.5))
a = mdb.models['Model-1'].rootAssembly
del a.features['Inclusion-2']
a1 = mdb.models['Model-1'].rootAssembly
p = mdb.models['Model-1'].parts['Inclusion']
a1.Instance(name='Inclusion-1', part=p, dependent=ON)
session.viewports['Viewport: 1'].view.setValues(nearPlane=49.7885, 
    farPlane=82.6662, width=37.345, height=21.7603, cameraPosition=(-13.1697, 
    -60.0725, 19.3968), cameraUpVector=(-0.144095, 0.238284, 0.960446), 
    cameraTarget=(5.41242, 1.78828, 6.83714))
a1 = mdb.models['Model-1'].rootAssembly
a1.rotate(instanceList=('Inclusion-1', ), axisPoint=(1.0, 0.0, 0.0), 
    axisDirection=(-1.0, 0.0, 0.0), angle=90.0)
#: The instance Inclusion-1 was rotated by 90. degrees about the axis defined by the point 1., 0., 0. and the vector -1., 0., 0.
a1 = mdb.models['Model-1'].rootAssembly
a1.translate(instanceList=('Inclusion-1', ), vector=(15.0, -5.0, 7.5))
#: The instance Inclusion-1 was translated by 15., -5., 7.5 with respect to the assembly coordinate system
session.viewports['Viewport: 1'].view.setValues(nearPlane=51.012, 
    farPlane=80.3084, width=38.2628, height=22.2951, cameraPosition=(38.3751, 
    -55.0206, 14.6953), cameraUpVector=(-0.0161982, 0.129191, 0.991488), 
    cameraTarget=(6.28424, 1.87373, 6.75762))
session.viewports['Viewport: 1'].view.setValues(nearPlane=52.6631, 
    farPlane=79.797, width=39.5014, height=23.0167, cameraPosition=(2.36587, 
    -60.8763, 26.0898), cameraUpVector=(0.024581, 0.293193, 0.955737), 
    cameraTarget=(6.36155, 1.8863, 6.73316))
a1 = mdb.models['Model-1'].rootAssembly
a1.InstanceFromBooleanMerge(name='Part-1', instances=(a1.instances['Matrix-2'], 
    a1.instances['Inclusion-1'], ), keepIntersections=ON, 
    originalInstances=SUPPRESS, domain=GEOMETRY)
session.viewports['Viewport: 1'].partDisplay.setValues(mesh=OFF)
session.viewports['Viewport: 1'].partDisplay.meshOptions.setValues(
    meshTechnique=OFF)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=ON)
p = mdb.models['Model-1'].parts['Matrix']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=ON, 
    engineeringFeatures=ON)
session.viewports['Viewport: 1'].partDisplay.geometryOptions.setValues(
    referenceRepresentation=OFF)
p = mdb.models['Model-1'].parts['Part-1']
session.viewports['Viewport: 1'].setValues(displayedObject=p)
session.viewports['Viewport: 1'].view.setValues(nearPlane=40.9676, 
    farPlane=69.856, width=32.9933, height=19.2246, cameraPosition=(45.8897, 
    -6.30171, 46.4813), cameraUpVector=(0.429406, -0.0314276, -0.902564), 
    cameraTarget=(7.81468, 1.87063, 7.81468))
session.viewports['Viewport: 1'].view.setValues(nearPlane=44.1932, 
    farPlane=66.5019, width=35.5911, height=20.7383, cameraPosition=(62.522, 
    2.17415, 13.5113), cameraUpVector=(-0.22959, -0.203635, -0.951747), 
    cameraTarget=(7.97489, 1.95228, 7.49709))
p = mdb.models['Model-1'].parts['Part-1']
c = p.cells
cells = c.getSequenceFromMask(mask=('[#4 ]', ), )
region = p.Set(cells=cells, name='Set-1')
p = mdb.models['Model-1'].parts['Part-1']
p.SectionAssignment(region=region, sectionName='Inclusion', offset=0.0, 
    offsetType=MIDDLE_SURFACE, offsetField='', 
    thicknessAssignment=FROM_SECTION)
p = mdb.models['Model-1'].parts['Part-1']
c = p.cells
cells = c.getSequenceFromMask(mask=('[#3 ]', ), )
region = p.Set(cells=cells, name='Set-2')
p = mdb.models['Model-1'].parts['Part-1']
p.SectionAssignment(region=region, sectionName='Matrix', offset=0.0, 
    offsetType=MIDDLE_SURFACE, offsetField='', 
    thicknessAssignment=FROM_SECTION)
session.viewports['Viewport: 1'].partDisplay.setValues(sectionAssignments=OFF, 
    engineeringFeatures=OFF, mesh=ON)
session.viewports['Viewport: 1'].partDisplay.meshOptions.setValues(
    meshTechnique=ON)
p = mdb.models['Model-1'].parts['Part-1']
c = p.cells
pickedCells = c.getSequenceFromMask(mask=('[#4 ]', ), )
e1, v1, d1 = p.edges, p.vertices, p.datums
p.PartitionCellByPlanePointNormal(normal=e1[1], cells=pickedCells, 
    point=p.InterestingPoint(edge=e1[0], rule=CENTER))
p = mdb.models['Model-1'].parts['Part-1']
p.seedPart(size=1.5, deviationFactor=0.1, minSizeFactor=0.1)
p = mdb.models['Model-1'].parts['Part-1']
p.generateMesh()
session.viewports['Viewport: 1'].view.setValues(nearPlane=41.3705, 
    farPlane=70.0004, width=33.3178, height=19.4635, cameraPosition=(50.8459, 
    -31.993, 13.1946), cameraUpVector=(-0.216504, 0.102666, -0.970868), 
    cameraTarget=(7.87585, 1.66246, 7.4944))
session.viewports['Viewport: 1'].view.setValues(width=32.794, height=19.1575, 
    viewOffsetX=-0.121841, viewOffsetY=-0.0232303)
a1 = mdb.models['Model-1'].rootAssembly
a1.regenerate()
a = mdb.models['Model-1'].rootAssembly
session.viewports['Viewport: 1'].setValues(displayedObject=a)
a = mdb.models['Model-1'].rootAssembly
del a.features['Part-1-1']
a = mdb.models['Model-1'].rootAssembly
a.resumeFeatures(('Matrix-2', 'Inclusion-1', ))
a1 = mdb.models['Model-1'].rootAssembly
a1.InstanceFromBooleanMerge(name='Part-2', instances=(a1.instances['Matrix-2'], 
    a1.instances['Inclusion-1'], ), originalInstances=SUPPRESS, 
    domain=GEOMETRY)
